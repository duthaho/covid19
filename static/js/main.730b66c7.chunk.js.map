{"version":3,"sources":["components/Header.js","components/Banner.js","components/Slider.js","components/Dot.js","components/Country.js","components/Patient.js","components/Timeline.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["Header","toggleTheme","useContext","ThemeContext","className","id","onClick","href","React","memo","country","cases","recovered","deaths","data-thumb","data-src","api","useLocalStorage","name","ttl","initial","useState","item","window","localStorage","getItem","data","JSON","parse","now","Date","expire","value","storedValue","setStoredValue","setValue","setItem","stringify","Slider","dataVn","setDataVn","dataWorld","setDataWorld","useEffect","axios","get","then","res","style","paddingTop","date","address","note","Timeline","patient","verifyDate","countryLength","length","Section","useCallback","covid19","map","c","index","key","renderTimeLine","createContext","theme","App","setTheme","Provider","document","body","classList","remove","add","confirmed","dead","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.730b66c7.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport { ThemeContext } from \"../App\";\r\n\r\nfunction Header() {\r\n  const { toggleTheme } = useContext(ThemeContext);\r\n  return (\r\n    <div className=\"ss-nav\">\r\n      <div id=\"header-wrapper\">\r\n        <div className=\"logo\" onClick={toggleTheme}></div>\r\n        <div className=\"wrapper\">\r\n          <ul className=\"nav\" id=\"ss-nav\">\r\n            <li>\r\n              <a href=\"#headslider\">Về đầu trang</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Banner({ country, cases, recovered, deaths }) {\r\n  return (\r\n    <div\r\n      data-thumb=\"images/preview/banner.jpg\"\r\n      data-src=\"images/preview/banner.jpg\"\r\n    >\r\n      <div className=\"fadeFromBottom\">\r\n        <div className=\"camera-title-container\">\r\n          <h1 className=\"camera-big-title\">{country}</h1>\r\n          <p className=\"camera-subtitle\">Số ca nhiễm: {cases || 0}</p>\r\n          <p className=\"camera-subtitle\">Bình phục: {recovered || 0}</p>\r\n          <p className=\"camera-subtitle\">Tử vong: {deaths || 0}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Banner);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Banner from \"./Banner\";\r\n\r\nconst api = (country) =>\r\n  `https://coronavirus-19-api.herokuapp.com/countries/${country}`;\r\n\r\nfunction useLocalStorage(name, ttl, initial = null) {\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(name);\r\n      if (item) {\r\n        const data = JSON.parse(item);\r\n        const now = Date.now();\r\n        if (data.expire > now) return data.value;\r\n      }\r\n      return initial;\r\n    } catch {\r\n      return initial;\r\n    }\r\n  });\r\n\r\n  const setValue = (value) => {\r\n    try {\r\n      setStoredValue(value);\r\n      window.localStorage.setItem(\r\n        name,\r\n        JSON.stringify({ value, expire: Date.now() + ttl })\r\n      );\r\n    } catch {}\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n\r\nfunction Slider() {\r\n  const [dataVn, setDataVn] = useLocalStorage(\"cvn\", 3600 * 1000);\r\n  const [dataWorld, setDataWorld] = useLocalStorage(\"cworld\", 3600 * 1000);\r\n\r\n  useEffect(() => {\r\n    if (!dataVn) {\r\n      axios.get(api(\"Vietnam\")).then((res) => setDataVn(res.data));\r\n    }\r\n    if (!dataWorld) {\r\n      axios.get(api(\"World\")).then((res) => setDataWorld(res.data));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"ss-row-clear\"\r\n      id=\"headslider\"\r\n      style={{ paddingTop: \"69px\" }}\r\n    >\r\n      <div\r\n        className=\"camera_wrap camera_indigo_skin camera-header\"\r\n        id=\"camera_wrap_1\"\r\n      >\r\n        <Banner {...(dataVn || {})} country=\"Việt Nam\" />\r\n        <Banner {...(dataWorld || {})} country=\"Thế giới\" />\r\n      </div>\r\n      <div className=\"camera-header-end\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\n\r\nfunction Dot({ date }) {\r\n  return (\r\n    <div className=\"time-dot-date\">\r\n      <div className=\"arrow-date-border\"></div>\r\n      <div className=\"arrow-date\"></div>\r\n      <div className=\"container-border\">\r\n        <div className=\"gray-container\">{date}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Dot);\r\n","import React from \"react\";\r\n\r\nfunction Country({ country, cases, recovered, deaths }) {\r\n  return (\r\n    <div className=\"container-border\">\r\n      <div className=\"gray-container\">\r\n        <div className=\"content-title\">\r\n          <span className=\"patient-name\">{country}</span>\r\n        </div>\r\n        <span className=\"button orange\">Số ca nhiễm: {cases}</span>{\" \"}\r\n        <span className=\"button green\">Bình phục: {recovered}</span>{\" \"}\r\n        <span className=\"button red\">Tử vong: {deaths}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Country);\r\n","import React from \"react\";\r\n\r\nfunction Patient({ name, address, note }) {\r\n  return (\r\n    <div className=\"container-border\">\r\n      <div className=\"gray-container\">\r\n        <div className=\"content-title\">\r\n          <span className=\"patient-name\">{name}</span>\r\n        </div>\r\n        <p>{address}</p>\r\n        <p>{note}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Patient);\r\n","import React from \"react\";\r\n\r\nimport Dot from \"./Dot\";\r\nimport Country from \"./Country\";\r\nimport Patient from \"./Patient\";\r\n\r\nfunction Timeline({ patient, country }) {\r\n  return (\r\n    <div className=\"ss-row\">\r\n      <div className=\"ss-left\">\r\n        <Dot date={patient.verifyDate} />\r\n\r\n        <div className=\"time-dot\"></div>\r\n        <div className=\"arrow-side\"></div>\r\n\r\n        <Patient {...patient} />\r\n      </div>\r\n\r\n      <div className=\"ss-right\">\r\n        <div className=\"arrow-side\"></div>\r\n\r\n        <Country {...country} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timeline;\r\n","import React, { useCallback } from \"react\";\r\n\r\nimport Timeline from \"./Timeline\";\r\n\r\nimport covid19 from \"../covid19.json\";\r\nimport country from \"../country.json\";\r\n\r\nconst countryLength = country.length;\r\n\r\nfunction Section() {\r\n  const renderTimeLine = useCallback(\r\n    () =>\r\n      covid19.map((c, index) => (\r\n        <Timeline\r\n          key={index}\r\n          patient={c}\r\n          country={country[index % countryLength]}\r\n        />\r\n      )),\r\n    []\r\n  );\r\n\r\n  return renderTimeLine();\r\n}\r\n\r\nexport default Section;\r\n","import React, { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Slider from \"./components/Slider\";\nimport Section from \"./components/Section\";\n\nexport const ThemeContext = React.createContext({\n  theme: \"light\",\n  toggleTheme: () => {},\n});\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"dark\") {\n      document.body.classList.remove(\"blackbody\");\n    } else {\n      document.body.classList.add(\"blackbody\");\n    }\n    setTheme(theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      <Header />\n      <Slider cases={100} confirmed={10} dead={0} />\n      <div id=\"ss-container\" className=\"ss-container\">\n        <div className=\"ss-row\">\n          <div className=\"ss-left \">\n            <h3 className=\"ss-row-titles\">Lịch trình bệnh nhân</h3>\n          </div>\n          <div className=\"ss-right\">\n            <h3 className=\"ss-row-titles\">Tình hình thế giới</h3>\n          </div>\n        </div>\n        <Section />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}